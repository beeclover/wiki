version: "3.8"

services:
  minio:
    image: minio/minio
    networks:
      - traefik_proxy
      - default
    volumes:
      - ./data/minio_root:/minio_root:z
      - ./data/certs:/root/.minio/certs:z
    env_file:
      - ./.env
      - ./.env.minio
    command: minio server /minio_root --console-address ":9001"
    labels:
      - traefik.enable=true
      # console
      - traefik.http.routers.work-202112__wiki-minio.entrypoints=websecure
      - traefik.http.routers.work-202112__wiki-minio.rule=Host(`minio.wiki.beeclover.pro`)
      - traefik.http.routers.work-202112__wiki-minio.tls.certresolver=leresolver
      - traefik.http.routers.work-202112__wiki-minio.service=work-202112__wiki-minio-service
      - traefik.http.services.work-202112__wiki-minio-service.loadbalancer.server.port=9001
      # api
      - traefik.http.routers.work-202112__wiki-minio-api.entrypoints=websecure
      - traefik.http.routers.work-202112__wiki-minio-api.rule=Host(`wiki.beeclover.pro`) && PathPrefix("/outline-bucket")
      - traefik.http.routers.work-202112__wiki-minio-api.tls.certresolver=leresolver
      - traefik.http.routers.work-202112__wiki-minio-api.service=work-202112__wiki-minio-api-service
      - traefik.http.services.work-202112__wiki-minio-api-service.loadbalancer.server.port=9000

  outline:
    image: outlinewiki/outline:latest
    networks:
      - traefik_proxy
      - default
    command: sh -c "yarn sequelize:migrate --env production-ssl-disabled && yarn start"
    environment:
      - DATABASE_URL=postgres://postgres:${POSTGRESQL_PASSWORD}@postgres:5432/postgres
      - REDIS_URL=redis://redis:6379
    env_file:
      - ./.env
      - ./.env.outline
      - ./.env.slack
    labels:
      - traefik.enable=true
      ## HTTP Routers
      - traefik.http.routers.work-202112__wiki.entrypoints=websecure
      - traefik.http.routers.work-202112__wiki.rule=Host(`wiki.beeclover.pro`)
      - traefik.http.routers.work-202112__wiki.tls.certresolver=leresolver
      - traefik.http.services.work-202112__wiki.loadbalancer.server.port=3000
  postgres:
    image: postgres
    env_file:
      - ./.env
    environment:
      POSTGRES_PASSWORD: ${POSTGRESQL_PASSWORD}
    volumes:
      - ./.db:/var/lib/postgresql/data
  redis:
    image: redis
    volumes:
      - redis:/data

########################### NETWORKS
networks:
  traefik_proxy:
    external: true

volumes:
  redis: null
